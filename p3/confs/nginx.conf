events {}
http {
	server {
		listen 80 default_server;
    		listen [::]:80 default_server;
		error_log /err debug;
    		location / {
			root /usr/share/nginx/html;
			return 301 https://$host$request_uri;
    		}
	}
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        	    '$ssl_protocol/$ssl_cipher'
            	'$status $body_bytes_sent "$http_referer" '
            	'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	server {
		listen 443 ssl http2;
    		listen [::]:443 ssl http2;
		error_log /err debug;
    		location / {
			root /usr/share/nginx/html;
			add_header Cross-Origin-Opener-Policy same-origin;
			add_header Cross-Origin-Embedder-Policy require-corp;
			add_header Cross-Origin-Resource-Policy cross-origin;
			# return 301 https://$host$request_uri;
    		}

	
    		ssl_certificate /etc/nginx/certs/example.crt;
    		ssl_certificate_key /etc/nginx/certs/example.key;
    		ssl_session_timeout 1d;
    		ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    		ssl_session_tickets off;

    		# modern configuration
    		#ssl_protocols TLSv1.3;
    		#ssl_prefer_server_ciphers off;

    		# HSTS (ngx_http_headers_module is required) (63072000 seconds)
    		#add_header Strict-Transport-Security "max-age=63072000" always;

    		# OCSP stapling
    		#ssl_stapling on;
    		#ssl_stapling_verify on;

    		# verify chain of trust of OCSP response using Root CA and Intermediate certs
    		ssl_trusted_certificate /etc/nginx/certs/example.crt;

    		#resolver 127.0.0.1;

    		# replace with the IP address of your resolver
	}
}
